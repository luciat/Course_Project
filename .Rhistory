nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(palnts)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
play()
dim(mtcars)
head(mtcars)
tail(mtcars)
names(mtcars)
nxt()
?boxplot
boxplot(mpg ~cyl, data = mtcars)
hist(mtcars$mpg)
setwd("~/DataScience_Coursera/GettingandCleaningData/Week4/Project")
setwd("~/DataScience_Coursera/GettingandCleaningData/Week4/CourseProject")
trainSet <- read.table("./UCI HAR Dataset/train/X_train.txt", sep="")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt", sep="")
names(trainSet)
names(testSet)
nrow(trainSet)
nrow(testSet)
completeSet <- rbind(trainSet, testSet)
names(completeSet)
nrow(completeSet)
colNames <- read.table("./UCI HAR Dataset/features.txt")
colNames
length(colNames)
nrow(colNames)
ncol(colNames)
names(colNames)
head(colNames)
class(colNames$V2)
colNames <- as.vector(colNames$V2)
features <- read.table("./UCI HAR Dataset/features.txt")
colNames <- as.vector(features$V2)
names(colNames)
length(colNames)
head(colNames)
cMeans <- grep("mean", colNames )
cMeans
colNames[cMeans]
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
cStddev
colNames[cStddev]
cols <- c(cMeans, cStddev)
cols
vCol <- c(cMeans, cStddev)
vCol <- order(vCol)
vCol
vCol <- c(cMeans, cStddev)
vCol
order(vCol)
sort(vCol)
class(vCol)
cols
oCols <- order(cols)
oCols
cols <- cols[oCols]
cols
class(oCols)
class(cols)
sort(vCol)
colNames[cols]
colNames[sort(vCol)]
vCol <- c(cMeans, cStddev)
vCol
colNames <- colNames[sort(vCol)]
colNames
vCol <- c(cMeans, cStddev)
vCol
vCol <- sort(vCol)
vCol
colNames <- colNames[vCol]
colNames
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
vCol <- c(cMeans, cStddev)
vCol
sort(vCol)
vCol <- sortVcol
vCol <- sort(Vcol)
vCol <- sort(vCol)
vCol
colNames <- as.vector(features$V2)
colNames <- colNames[vCol]
colNames
colNames <- as.vector(features$V2)
vCol <- c(cMeans, cStddev)
vCol <- vCol[sort(vCol)]
vCol
vCol <- c(cMeans, cStddev)
vCol
sort(vCol)
colNames <- colNames[sort(vCol)]
colNames
colNames <- as.vector(features$V2)
vCol <- c(cMeans, cStddev)
oCol <- sort(vCol)
oCol
colNames <- colNames[oCol]
colNames
colNames <- as.vector(features$V2)
vCol <- c(cMeans, cStddev)
oCol <- sort(vCol)
vCol <- vCol[oCol]
vCol
vCol <- c(cMeans, cStddev)
oCol <- order(vCol)
vCol <- vCol[oCol]
vCol
colNames <- colNames[vCol]
colNames
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
vCol <- c(cMeans, cStddev)
length(vCol)
colNames <- as.vector(features$V2)
length(colNames)
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
vCol <- c(cMeans, cStddev)
length(vCol)
oCol <- order(vCol)
length(oCol)
vCol <- vCol[oCol]
length(vCol)
colNames <- colNames[vCol]
colNames
nCol <- length(colNames)
extractSet <- completeSet[vCol]
names(extractSet)
ncol(extractSet)
nrow(completeSet)
nrow(extractSet)
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
head(activityLabels)
class(activityLabels$V2)
activityLabels <- as.vector(activityLabels$V2)
activityLabels
activityTrainSet <- read.table("./UCI HAR Dataset/train/y_train.txt")
activityTestSet <- read.table("./UCI HAR Dataset/test/y_test.txt")
nrow(activityTrainSet)
nrow(activityTestSet)
ncol(activityTrainSet)
ncol(activityTestSet)
activitySet <- rbind(activityTrainSet, activityTestSet)
nrow(activitySet)
activityNameSet <- activityLabels[activitySet]
activitySet <- as.vector(activitySet$V1)
activitySet
activitySet <- rbind(activityTrainSet, activityTestSet)
class(activitySet)
head(activitySet)
nrow(activitySet)
activitySet <- as.vector(activitySet$V1)
class(activitySet)
length(activitySet)
activityNameSet <- activityLabels[activitySet]
activityNameSet
class(activityNameSet)
length(activityNameSet)
subjectTrainSet <- read.table("./UCI HAR Dataset/train/subject_train.txt")
subjectTestSet <- read.table("./UCI HAR Dataset/test/subject_test.txt")
subjectSet <- rbind(subjectTrainSet, subjectTestSet)
class(subjectSet)
head(subjectSet
)
subjectSet <- as.vector(subjectSet$V1)
class(subjectSet)
head(subjectSet)
names(selectSet)
selectSet <- completeSet[vCol]
nRow <- nrow(selectSet)
nRow
names(selectSet)
colnames(selectSet)
colnames(selectSet) <- colNames
colnames(selectSet)
head(selectSet)
nActivity <- length(activityLabels)
nActivity
subjects <- unique(subjectSet)
subjects
subjectSet
tail(subjectSet)
subjectSet[100:150]
subjectSet[1:50]
subjectSet[80:130]
subjectSet[500:550]
subjectSet[400:450]
subjectSet[600:650]
length(subjectSet)
subjectSet[6000:6500]
subjectSet[8000:8500]
nSubject <- unique(subjectSet)
vSubject <- unique(subjectSet)
vSubject
nSubject <- length(vSubject)
nSubject
avgSet <- data.frame(matrix(NA, nrow=nActivity*nSubject, ncol=nCol+2))
nrow(avgSet)
class(avgSet)
ncol(avgSet)
vNames <- c("Activity", "Subject")
vNames
vNames <- c(vNames, colNames)
vNames
vNames <- c("Activity", "Subject")
vNames <- c(vNames, colNames)
vNames
colnames(avgSet) <- vNames
names)avgSet
names(avgSet)
ind <- 1
for (indA in 1:nActivity) {
for (indS in 1:nSubject) {
avgSet$Activity[ind] <- activityLabels[indA]
avgSet$Subject[ind] <- indS
vInd <- c(activitySet==indA & subjectSet==indS)
for (indC in 1:nCol) {
avgSet[ind, indC+2] <- mean(selectSet[vInd, indC])
}
ind <- ind+1
}
}
nrow(avgSet)
ncol(avgSet)
head(avgSet)
avgSet[1:3]
avgSet[1:3,]
avgSet[,1:3]
nrow(avgSet)
write.table(avgSet, "./UCI HAR Dataset/avgSet.txt", row.name=FALSE)
avgSet[,1:5]
# Read training and testing data sets
trainSet <- read.table("./UCI HAR Dataset/train/X_train.txt", sep="")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt", sep="")
# Join the training and testing data sets
completeSet <- rbind(trainSet, testSet)
# Read features names for the measurements
features <- read.table("./UCI HAR Dataset/features.txt")
colNames <- as.vector(features$V2)
# Extract measurements on the mean and standard deviation for each measurement
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
vCol <- c(cMeans, cStddev)
oCol <- order(vCol)
vCol <- vCol[oCol]
colNames <- colNames[vCol]
nCol <- length(colNames)
# Extract selected columns to a new data set
selectSet <- completeSet[vCol]
nRow <- nrow(selectSet)
# Name variables columns
colnames(selectSet) <- colNames
# Read activity names
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
activityLabels <- as.vector(activityLabels$V2)
# Read activities performed by the subjects
activityTrainSet <- read.table("./UCI HAR Dataset/train/y_train.txt")
activityTestSet <- read.table("./UCI HAR Dataset/test/y_test.txt")
# Join the training and testing activities
activitySet <- rbind(activityTrainSet, activityTestSet)
activitySet <- as.vector(activitySet$V1)
# Name activities
activityNameSet <- activityLabels[activitySet]
# Read subjects who performed the measured activities
subjectTrainSet <- read.table("./UCI HAR Dataset/train/subject_train.txt")
subjectTestSet <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# Join the training and testing subjects
subjectSet <- rbind(subjectTrainSet, subjectTestSet)
subjectSet <- as.vector(subjectSet$V1)
# Create the new data table
nActivity <- length(activityLabels)
vSubject <- unique(subjectSet)
nSubject <- length(vSubject)
avgSet <- data.frame(matrix(NA, nrow=nActivity*nSubject, ncol=nCol+2))
vNames <- c("Activity", "Subject")
vNames <- c(vNames, colNames)
colnames(avgSet) <- vNames
# Compute the average of each variable for each activity and each subject
ind <- 1
for (indA in 1:nActivity) {
for (indS in 1:nSubject) {
avgSet$Activity[ind] <- activityLabels[indA]
avgSet$Subject[ind] <- indS
vInd <- c(activitySet==indA & subjectSet==indS)
for (indC in 1:nCol) {
avgSet[ind, indC+2] <- mean(selectSet[vInd, indC])
}
ind <- ind+1
}
}
# Write average data set
write.table(avgSet, "avgSet.txt", row.name=FALSE)
avgSet[, 1:5]
setwd("~/DataScience_Coursera/GettingandCleaningData/Week4/Course_Project")
setwd("~/DataScience_Coursera/GettingandCleaningData/Week4/Course_Project")
# Read training and testing data sets
trainSet <- read.table("./UCI HAR Dataset/train/X_train.txt", sep="")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt", sep="")
# Join the training and testing data sets
completeSet <- rbind(trainSet, testSet)
# Read features names for the measurements
features <- read.table("./UCI HAR Dataset/features.txt")
colNames <- as.vector(features$V2)
# Extract measurements on the mean and standard deviation for each measurement
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
vCol <- c(cMeans, cStddev)
oCol <- order(vCol)
vCol <- vCol[oCol]
colNames <- colNames[vCol]
nCol <- length(colNames)
# Extract selected columns to a new data set
selectSet <- completeSet[vCol]
nRow <- nrow(selectSet)
# Name variables columns
colnames(selectSet) <- colNames
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
activityLabels <- as.vector(activityLabels$V2)
# Read activities performed by the subjects
activityTrainSet <- read.table("./UCI HAR Dataset/train/y_train.txt")
activityTestSet <- read.table("./UCI HAR Dataset/test/y_test.txt")
# Join the training and testing activities
activitySet <- rbind(activityTrainSet, activityTestSet)
activitySet <- as.vector(activitySet$V1)
# Name activities
activityNameSet <- activityLabels[activitySet]
# Read subjects who performed the measured activities
subjectTrainSet <- read.table("./UCI HAR Dataset/train/subject_train.txt")
subjectTestSet <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# Join the training and testing subjects
subjectSet <- rbind(subjectTrainSet, subjectTestSet)
subjectSet <- as.vector(subjectSet$V1)
# Create the new data table
nActivity <- length(activityLabels)
vSubject <- unique(subjectSet)
nSubject <- length(vSubject)
avgSet <- data.frame(matrix(NA, nrow=nActivity*nSubject, ncol=nCol+2))
vNames <- c("Activity", "Subject")
vNames <- c(vNames, colNames)
colnames(avgSet) <- vNames
# Compute the average of each variable for each activity and each subject
ind <- 1
for (indA in 1:nActivity) {
for (indS in 1:nSubject) {
avgSet$Activity[ind] <- activityLabels[indA]
avgSet$Subject[ind] <- indS
vInd <- c(activitySet==indA & subjectSet==indS)
for (indC in 1:nCol) {
avgSet[ind, indC+2] <- mean(selectSet[vInd, indC])
}
ind <- ind+1
}
}
class(avgSet$Activity)
class(avgSet$Subject)
class(avgSet[3:81])
class(avgSet[,3:81])
class(avgSet$`tBodyAcc-mean()-X`)
names(avgSet)
class(avgSet$tBodyAcc-mean()-X)
class(avgSet$'tBodyAcc-mean()-X)
class(avgSet$'tBodyAcc-mean()-X')
class(avgSet$'fBodyBodyGyroJerkMag-meanFreq()')
write.csv(avgSet, "./avgSet.csv", row.names = FALSE)
ind <- 1
for (indS in 1:nSubject) {
for (indA in 1:nActivity) {
avgSet$Subject[ind] <- indS
avgSet$Activity[ind] <- activityLabels[indA]
vInd <- c(activitySet==indA & subjectSet==indS)
for (indC in 1:nCol) {
avgSet[ind, indC+2] <- mean(selectSet[vInd, indC])
}
ind <- ind+1
}
}
# Write average data set
write.csv(avgSet, "avgSet.csv", row.name=FALSE)
write.csv(avgSet, "avgSet.csv", row.names=FALSE)
names(avgSet)
vNames <- c("Subject", "Activity")
vNames <- c(vNames, colNames)
colnames(avgSet) <- vNames
# Compute the average of each variable for each activity and each subject
ind <- 1
for (indS in 1:nSubject) {
for (indA in 1:nActivity) {
avgSet$Subject[ind] <- indS
avgSet$Activity[ind] <- activityLabels[indA]
vInd <- c(activitySet==indA & subjectSet==indS)
for (indC in 1:nCol) {
avgSet[ind, indC+2] <- mean(selectSet[vInd, indC])
}
ind <- ind+1
}
}
write.csv(avgSet, "avgSet.csv", row.names=FALSE)
# Read training and testing data sets
trainSet <- read.table("./UCI HAR Dataset/train/X_train.txt", sep="")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt", sep="")
# Join the training and testing data sets
completeSet <- rbind(trainSet, testSet)
# Read features names for the measurements
features <- read.table("./UCI HAR Dataset/features.txt")
colNames <- as.vector(features$V2)
# Extract measurements on the mean and standard deviation for each measurement
cMean <- grep("mean", colNames )
cStddev <- grep("std", colNames )
vCol <- c(cMeans, cStddev)
oCol <- order(vCol)
vCol <- vCol[oCol]
colNames <- colNames[vCol]
nCol <- length(colNames)
# Extract selected columns to a new data set
selectSet <- completeSet[vCol]
nRow <- nrow(selectSet)
# Name variables columns
colnames(selectSet) <- colNames
# Read activity names
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt")
activityLabels <- as.vector(activityLabels$V2)
# Read activities performed by the subjects
activityTrainSet <- read.table("./UCI HAR Dataset/train/y_train.txt")
activityTestSet <- read.table("./UCI HAR Dataset/test/y_test.txt")
# Join the training and testing activities
activitySet <- rbind(activityTrainSet, activityTestSet)
activitySet <- as.vector(activitySet$V1)
# Name activities
activityNameSet <- activityLabels[activitySet]
# Read subjects who performed the measured activities
subjectTrainSet <- read.table("./UCI HAR Dataset/train/subject_train.txt")
subjectTestSet <- read.table("./UCI HAR Dataset/test/subject_test.txt")
# Join the training and testing subjects
subjectSet <- rbind(subjectTrainSet, subjectTestSet)
subjectSet <- as.vector(subjectSet$V1)
# Create the new data table
nActivity <- length(activityLabels)
vSubject <- unique(subjectSet)
nSubject <- length(vSubject)
avgSet <- data.frame(matrix(NA, nrow=nActivity*nSubject, ncol=nCol+2))
vNames <- c("Subject", "Activity")
vNames <- c(vNames, colNames)
colnames(avgSet) <- vNames
# Compute the average of each variable for each activity and each subject
ind <- 1
for (indS in 1:nSubject) {
for (indA in 1:nActivity) {
avgSet$Subject[ind] <- indS
avgSet$Activity[ind] <- activityLabels[indA]
vInd <- c(activitySet==indA & subjectSet==indS)
for (indC in 1:nCol) {
avgSet[ind, indC+2] <- mean(selectSet[vInd, indC])
}
ind <- ind+1
}
}
# Write average data set
write.csv(avgSet, "avgSet.csv", row.names=FALSE)
